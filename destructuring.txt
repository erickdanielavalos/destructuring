## **Object Destructuring 1**

What does the following code return/print?

```jsx
let facts = {numPlanets: 8, yearNeptuneDiscovered: 1846};
let {numPlanets, yearNeptuneDiscovered} = facts;

console.log(numPlanets); // 8
console.log(yearNeptuneDiscovered); // 1846
```

## **Object Destructuring 2**

What does the following code return/print?

```jsx
let planetFacts = {
  numPlanets: 8,
  yearNeptuneDiscovered: 1846,
  yearMarsDiscovered: 1659
};

let {numPlanets, ...discoveryYears} = planetFacts;

console.log(discoveryYears); // ...1846,...1659
```

## **Object Destructuring 3**

What does the following code return/print?

```jsx
function getUserData({firstName, favoriteColor="green"}){
  return `Your name is ${firstName} and you like ${favoriteColor}`;
}

getUserData({firstName: "Alejandro", favoriteColor: "purple"}) // your name is alek=ajndry and yuou like periople 
getUserData({firstName: "Melissa"}) // your name is melissa and uou like 
green
getUserData({}) // undefined 
```

## **Array Destructuring 1**
first maya 
second marisa 
chia 

What does the following code return/print?
## **Array Destructuring 2**

What does the following code return/print?

```jsx
let [raindrops, whiskers, ...aFewOfMyFavoriteThings] = [
  "Raindrops on roses",
  "whiskers on kittens",
  "Bright copper kettles",
  "warm woolen mittens",
  "Brown paper packages tied up with strings"
]

console.log(raindrops); //raindrops on roses 
console.log(whiskers); // whiskers on kittens 
console.log(aFewOfMyFavoriteThings); // [bright coppter, wamm...,brown...]
```

## **Array Destructuring 3**

What does the following code return/print?

```jsx
let numbers = [10, 20, 30];
[numbers[1], numbers[2]] = [numbers[2], numbers[1]]

console.log(numbers) // 20, 10, 30
```

## **ES2015 Refactoring**

In this exercise, you’ll refactor some ES5 code into ES2015.

## **ES5 Assigning Variables to Object Properties**

## ****ES2015 Object Destructuring****

```jsx
/* Write an ES2015 Version */
```
let {numbers{a},numbers{b}} = obj 
## ****ES5 Array Swap****

```jsx
var arr = [1, 2];
var temp = arr[0];
arr[0] = arr[1];
arr[1] = temp;
```

## ****ES2015 One-Line Array Swap with Destructuring****
[arr[1],arr[0]]=[arr[0], arr[1]]
```jsx
/* Write an ES2015 Version */
```

## **raceResults()**

Write a function called ***raceResults*** which accepts a single array argument. It should return an object with the keys ***first***, ***second***, ***third***, and ***rest***.

- first: the first element in the array
- second: the second element in the array
- third: the third element in the array
- rest: all other elements in the array

**Write a *one line* function to make this work using**

- An arrow function
- Destructuring
-Enhanced object assignment (same key/value shortcut)
raceResults(['Tom', 'Margaret', 'Allison', 'David', 'Pierre'])

/*
  {
    first: "Tom",
    second: "Margaret",
    third: "Allison",
    rest: ["David", "Pierre"]
  }
*/

function raceResults([first,second,third, ...rest]){
 return {first, second, third,rest}
}